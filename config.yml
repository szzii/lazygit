gui:
  scrollHeight: 2
  scrollPastBottom: true
  mouseEvents: true
  sidePanelWidth: 0.3333
  expandFocusedSidePanel: false
  mainPanelSplitMode: horizontal
  language: "en" # one of 'auto' | 'en' | 'zh' | 'pl' | 'nl' | 'ja' | 'ko'
  theme:
    lightTheme: false
    activeBorderColor:
      - green
      - bold
    inactiveBorderColor:
      - white
    optionsTextColor:
      - blue
    selectedLineBgColor:
      - default
    selectedRangeBgColor:
      - blue
  commitLength:
    show: true
  skipUnstageLineWarning: false
  skipStashWarning: false
  showFileTree: true # for rendering changes files in a tree format
  showListFooter: true # for seeing the '5 of 20' message in list panels
  showRandomTip: true
  showBottomLine: true # for hiding the bottom information line (unless it has important information to tell you)
  showCommandLog: true
  showIcons: true
  commandLogSize: 8
  splitDiff: "auto" # one of 'auto' | 'always'
  skipRewordInEditorWarning: false # for skipping the confirmation before launching the reword editor
git:
  paging:
    colorArg: always
    useConfig: false
  merging:
    manualCommit: false
    args: ""
  log:
    # one of date-order, author-date-order, topo-order or default.
    # topo-order makes it easier to read the git log graph, but commits may not
    # appear chronologically. See https://git-scm.com/docs/git-log#_commit_ordering
    order: "topo-order"
    # one of always, never, when-maximised
    # this determines whether the git graph is rendered in the commits panel
    showGraph: "when-maximised"
    # displays the whole git graph by default in the commits panel (equivalent to passing the `--all` argument to `git log`)
    showWholeGraph: false
  skipHookPrefix: WIP
  autoFetch: true
  autoRefresh: true
  branchLogCmd: "git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium {{branchName}} --"
  allBranchesLogCmd: "git log --graph --all --color=always --abbrev-commit --decorate --date=relative  --pretty=medium"
  overrideGpg: false
  disableForcePushing: true
  parseEmoji: true
  diffContextSize: 3 # how many lines of context are shown around a change in diffs
os:
  openCommand: open {{filename}}
  editCommand: "nvim" # as an example
  editCommandTemplate: "{{editor}} +{{line}} {{filename}}"
refresher:
  refreshInterval: 10
  fetchInterval: 60
update:
  method: prompt
  days: 14
confirmOnQuit: false
quitOnTopLevelReturn: false
disableStartupPopups: false
notARepository: "skip" # one of: 'prompt' | 'create' | 'skip' | 'quit'
promptToReturnFromSubprocess: true # display confirmation when subprocess terminates
keybinding:
  universal:
    quitWithoutChangingDirectory: "Q"
    prevItem-alt: "u"
    nextItem-alt: "e"
    prevBlock-alt: "n"
    nextBlock-alt: "i"
    nextTab: "I"
    prevTab: "N"
    nextMatch: "k"
    prevMatch: "K"
    new: "k"
    edit: "o"
    openFile: "O"
    scrollUpMain-alt2: "<c-u>"
    scrollDownMain-alt2: "<c-e>"
    executeCustomCommand: ";"
    undo: "l"
    redo: "<c-r>"
    diffingMenu: "<c-d>"
    filteringMenu: "<c-f>"
    copyToClipboard: "Y"
  status:
    checkForUpdate: "u"
    recentRepos: "<enter>"
  files:
    ignoreFile: "d"
    refreshFiles: "r"
  branches:
    setUpstream: "s"
    viewGitFlowOptions: "v"
  commits:
    moveUpCommit: "<c-l>"
    moveDownCommit: "<c-j>"
    resetCherryPick: "<c-c>"
  stash:
    popStash: "p"
    renameStash: "r"

customCommands: []
services: {}
